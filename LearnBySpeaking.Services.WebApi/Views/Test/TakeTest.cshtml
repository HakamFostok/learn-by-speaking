@model TestViewModel
@{
    ViewData["Title"] = "Home Page";
}

<div id="take-test">

    <div class="row">
        <div class="col-12">
            <h2 class="text-center">@Model.Topic.Title</h2>
            <div class="card mt-2">
                <div class="card-body border-1 w-100"
                     style="position:relative; max-height:200px; height:200px;"
                     id="article-text">
                    <article>
                        <p>@Model.Topic.Content</p>
                    </article>
                </div>
            </div>
        </div>
    </div>


    <div class="row mt-4">
        @foreach (var question in Model.Questions)
        {
            <div class="col-6 mt-3">
                <div>
                    @(question.Text)
                </div>

                @foreach (var answer in question.Answers)
                {
                    <div class="w-100 border mt-1 p-2 answer-hover" style="cursor:pointer;">
                        @(answer.Text)
                    </div>
                }
            </div>

        }
    </div>

    <div class="row mt-4">
        <div class="col-lg-6 offset-3 text-center">
            <button class="btn btn-primary">Take Test</button>
        </div>
    </div>
</div>

@section Scripts {
    <script>
        const app = new Vue({
            el: '#take-test',
            data: {
                content: @(Json.Serialize(Model)),
                selectedTopicId : '',
            },
            computed: {
                comboboxData: function () {
                    const result = [];
                    if (this.content)
                        for (const topic of this.content.topics) {
                            result.push({ id: topic.id, title: topic.title });
                        }
                    return result;
                },
                selectedTopicText: function () {
                    if (!this.content || !this.content.topics)
                        return '';

                    const temp = this.content.topics.find(x => x.id === this.selectedTopicId);
                    if (temp)
                        return temp.content;
                    return '';
                }
            }
        });

        const container = document.querySelector('#article-text');
        const ps = new PerfectScrollbar(container);

    </script>
}